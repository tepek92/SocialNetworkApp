{"version":3,"sources":["helpers/validators/Validators.js","components/common/FormControler/FormControler.jsx","components/common/FormControler/FormControler.module.css","hoc/WithAuthNavigate.jsx","img/presswall.jpg","components/Profile/Profileinfo/Profileinfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Profileinfo/ProfileStatus.jsx","components/Profile/Profileinfo/Profileinfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","redux/profileSelector.js","components/Profile/ProfileContainer.jsx"],"names":["__webpack_require__","d","__webpack_exports__","require","maxLength","value","undefined","length","concat","FormInputCreator","_ref","Element","meta","input","props","Object","_Users_pavel_project_it_incubator_SocialNetworkApp_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","assign","className","error","touched","s","element","module","exports","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","mapStateToProps","state","isAuthorized","auth","WithAuthNavigate","Component","connect","to","p","presswall","avatar","link","item","myPosts","ProfileStatus","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","userStatus","_useState4","setUserStatus","useEffect","changeMode","e","updateUserStatus","target","isOwner","react_default","onChange","autoFocus","onBlur","onDoubleClick","Profileinfo","userProfile","Preloader","src","alt","fullName","photos","large","files","console","log","saveNewPhoto","type","Profileinfo_ProfileStatus","lookingForAJob","lookingForAJobDescription","keys","contacts","map","href","Post","message","likeCount","maxLength50","ReduxPostForm","reduxForm","form","onSubmit","handleSubmit","Field","validate","component","name","MyPosts","postElement","postDate","MyPosts_Post_Post","formData","addNewPost","newpost","MyPostsContainer","profilePage","newPostText","Profile","Profile_Profileinfo_Profileinfo","MyPosts_MyPostsContainer","getUserProfile","getUserStatus","getAuthorizedUserId","id","getIsAuthorized","ProfileContainer","userID","this","router","params","userId","authorizedUserId","setUserProfile","updateProfile","prevProps","components_Profile_Profile","React","compose","withRouter"],"mappings":"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","file":"static/js/5.3e054b90.chunk.js","sourcesContent":["export const require = (value) => {\n    return value ? undefined : \"Field is require\"\n};\n\nexport const maxLength = (length) => (value) => {\n    return value.length > length ? `Max length is ${length} symbol` : undefined;\n};","import React from \"react\";\nimport s from \"./FormControler.module.css\"\n\nexport const FormInputCreator = ({ Element, meta, input, ...props }) => {\n  return (\n    <div>\n      <div>\n        <Element className={meta.error && meta.touched && s.element}{...input} {...props} />\n      </div>\n      <div>\n        {meta.error && meta.touched && <span>{meta.error}</span>}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"FormControler_element__3MPTr\"};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nconst mapStateToProps = (state) => {\n    return {\n      isAuthorized: state.auth.isAuthorized\n    };\n  };\n\nconst WithAuthNavigate = (Component) => {\n  let AuthNavigateComponent = (props) => {\n    return props.isAuthorized ? (\n      <Component {...props} />\n    ) : (\n      <Navigate to={\"/login\"} />\n    );\n  };\n  return connect(mapStateToProps)(AuthNavigateComponent);\n};\n\n\n\n\nexport default WithAuthNavigate;\n","module.exports = __webpack_public_path__ + \"static/media/presswall.1ad3742e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"presswall\":\"Profileinfo_presswall__2OoRz\",\"avatar\":\"Profileinfo_avatar__3wYR-\",\"link\":\"Profileinfo_link__3YBJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3iSFZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__33DC9\"};","import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\n// import s from \"./Profileinfo.module.css\";\n\nconst ProfileStatus = (props) => {\n  // С помощью хука useState создаю \"локальный стейт\"\n  // с переменными и функциями меняющими эти переменные\"\n  let [editMode, setEditMode] = useState(false);\n  let [userStatus, setUserStatus] = useState(props.userStatus);\n\n  // С помощью хука useEffect, создаю зависимость.\n  // При изменении приходящего в пропсах значения props.userStatus\n  // Меняем значение userStatus в \"локальном стейте\"\n  useEffect(() => setUserStatus(props.userStatus), [props.userStatus]);\n\n  // Функция вызывается при нажатии на <span> статус.\n  // Или смне фокуса c <input>, в котором мы меняем статус.\n  // В зависимомти от состояния editMode\n  const changeMode = (e) => {\n    if (editMode) {\n      setEditMode(false); // могу ли я эту функцию использовать в условиях и циклах??\n      props.updateUserStatus(e.target.value);\n    } else {\n      setEditMode(true); // могу ли я эту функцию использовать в условиях и циклах??\n    }\n  };\n\n  const changeStatus = (e) => {\n    setUserStatus(e.target.value);\n  };\n\n  return props.isOwner ? (\n    <div>\n      {editMode && (\n        <input\n          onChange={changeStatus}\n          autoFocus\n          onBlur={changeMode}\n          value={userStatus}\n        />\n      )}\n      {!editMode && (\n        <span onDoubleClick={changeMode}>\n          {userStatus || \"Добавить статус\"}\n        </span>\n      )}\n    </div>\n  ) : (\n    <span>{userStatus || \"\"}</span>\n  );\n};\n\nexport default ProfileStatus;\n","import React from \"react\";\nimport presswall from \"../../../img/presswall.jpg\";\nimport avatar from \"../../../img/user.png\";\nimport s from \"./Profileinfo.module.css\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\"\n\nconst Profileinfo = (props) => {\n  if (!props.userProfile) {\n    return <Preloader />;\n  }\n\n  const addFile = (e) => {\n    if(e.target.files.length !== 0) {\n      console.log(e.target.files);\n      props.saveNewPhoto(e.target.files[0]);\n    }\n  } \n\n  debugger\n  return (\n    <div>\n      <div>\n        <img className={s.presswall} src={presswall} alt=\"presswall\" />\n      </div>\n      <div>\n        <div>{props.userProfile.fullName}</div>\n        <img\n          className={s.avatar}\n          src={props.userProfile.photos.large || avatar}\n          alt=\"avatar\"\n        /> <br/>\n        {props.isOwner && <input onChange={addFile} type={\"file\"}/>}\n        <ProfileStatus isOwner={props.isOwner} updateUserStatus={props.updateUserStatus} userStatus={props.userStatus} />\n        <br/>\n        <div>Место работы:\n          {props.userProfile.lookingForAJob\n            ? props.userProfile.lookingForAJobDescription\n            : \"Уже работаю\"}\n        </div>\n        <div className={s.link}>\n          <br/>\n          Где меня найти:\n          {Object.keys(props.userProfile.contacts).map((link) => {\n            return (\n              <div>\n                {\"==> \"}\n                <a href={\"https://\" + props.userProfile.contacts[link]}>\n                  {link}\n                </a>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profileinfo;\n","import React from \"react\";\nimport s from \"./Post.module.css\";\n\n// class Post extends React.Component {\n//   render() {\n//     console.log(\"post rerender\");\n//     return (\n//       <div className={s.item}>\n//         <img\n//           src=\"https://cspromogame.ru//storage/upload_images/avatars/1299.jpg\"\n//           alt=\"avatar\"\n//         />\n//         {this.props.message}\n//         <div>Like: {this.props.likeCount}</div>\n//       </div>\n//     );\n//   }\n// }\n\nconst Post = (props) => {\n  return (\n    <div className={s.item}>\n      <img\n        src=\"https://cspromogame.ru//storage/upload_images/avatars/1299.jpg\"\n        alt=\"avatar\"\n      />\n      {props.message}\n      <div>Like: {props.likeCount}</div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport Post from \"./Post/Post\";\nimport s from \"./MyPosts.module.css\";\nimport { Field, reduxForm } from \"redux-form\";\nimport {require, maxLength} from \"../../../helpers/validators/Validators\"\nimport { FormInputCreator } from \"../../common/FormControler/FormControler\";\n\nconst MyPosts = (props) => {\n  let postElement = props.postDate.map((p) => (\n    <Post message={p.message} likeCount={p.likeCount} />\n  ));\n\n  const onSubmit = (formData) => {\n    console.log(formData);\n    props.addNewPost(formData.newpost);\n  }\n\n  return (\n    <div className={s.myPosts}>\n      My posts\n      <ReduxPostForm onSubmit={onSubmit}/>\n      <div>{postElement}</div>\n    </div>\n  );\n};\n\nconst maxLength50 = maxLength(50);\n\nconst PostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div><Field validate={[require, maxLength50]} component={FormInputCreator} name=\"newpost\" Element={\"textarea\"}/></div>\n      <div><button>Добавить</button></div>\n    </form>\n  );\n};\n\nconst ReduxPostForm = reduxForm({form: \"post\"})(PostForm);\n\n\nexport default MyPosts;","import MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\nimport { addNewPost } from \"../../../redux/profileReducer\";\n\nconst mapStateToProps = (state) => {\n  return {\n    postDate: state.profilePage.postDate,\n    newPostText: state.profilePage.newPostText,\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, { addNewPost })(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\n// import s from \"./Profile.module.css\";\nimport Profileinfo from \"./Profileinfo/Profileinfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n  return (\n    <div>\n      <Profileinfo {...props}/>\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","export const getUserProfile = (state) => state.profilePage.userProfile;\nexport const getUserStatus = (state) => state.profilePage.userStatus;\nexport const getAuthorizedUserId = (state) => state.auth.id;\nexport const getIsAuthorized = (state) => state.auth.isAuthorized;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  setUserProfile,\n  setUserStatus,\n  updateUserStatus,\n  saveNewPhoto\n} from \"../../redux/profileReducer\";\nimport Profile from \"./Profile\";\nimport WithAuthNavigate from \"../../hoc/WithAuthNavigate\";\nimport { compose } from \"redux\";\nimport withRouter from \"../../hoc/WithRouter\";\nimport {\n  getAuthorizedUserId,\n  getIsAuthorized,\n  getUserProfile,\n  getUserStatus,\n} from \"../../redux/profileSelector\";\n\nclass ProfileContainer extends React.Component {\n\n  updateProfile() {\n    let userID = this.props.router.params.userId || this.props.authorizedUserId;\n    this.props.setUserProfile(userID);\n    this.props.setUserStatus(userID);\n  }\n  componentDidMount() {\n    this.updateProfile();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.router.params.userId !== prevProps.router.params.userId) {\n      this.updateProfile();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Profile {...this.props} isOwner={!this.props.router.params.userId}/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: getUserProfile(state),\n    userStatus: getUserStatus(state),\n    authorizedUserId: getAuthorizedUserId(state),\n    isAuthorized: getIsAuthorized(state),\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, { setUserProfile, setUserStatus, updateUserStatus, saveNewPhoto }),\n  withRouter,\n  WithAuthNavigate\n)(ProfileContainer);\n"],"sourceRoot":""}